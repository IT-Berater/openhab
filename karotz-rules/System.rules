import org.openhab.core.library.types.*
import org.openhab.model.script.actions.*
import java.util.Date
import java.text.SimpleDateFormat

 
//
//  Systeminfos von Homematic und System von OpenHAB
//
// (c) 2016 Thomas Wenzlaff http://www.wenzlaff.info 
//

// Die URL mit dem KEY zu dem ThingSpeak Service z.B. GET https://api.thingspeak.com/update?api_key=<write-key>&field1=0
// Kanal mit der Systemtemperatur des Rasp. Pi https://thingspeak.com/channels/51786
var String THINGSPEAK_SYSTEM_URL="https://api.thingspeak.com/update?key=<write-key>" 
// Kanal mit dem Wetter aus Langenhagen https://thingspeak.com/channels/44925
var String THINGSPEAK_WETTER_URL="https://api.thingspeak.com/update?key=<write-key>"

//------------------------------------------------------------------------
//    Sendet Systeminfos um 12 Uhr per Pushover
//------------------------------------------------------------------------
				
rule "Sende Systemstatus per Pushover um 12 Uhr"
 when
     Time cron "0 0 12 * * ?" 
 then    
  	     var text = "Systeminfo: Systemlaufzeit: " + uptimeFormatted.state + " OpenHab laufzeit: " + openhabUptimeFormatted.state + " Freier Speicher: " + memFreePercent.state + " %"
  	     
    	 pushover(text)    
end

//------------------------------------------------------------------------
//    Sendet Temperatur, Luftdruck und Status aus Langenhagen an ThingSpeak
//------------------------------------------------------------------------
				
rule "Sende Temperatur, Luftfeuchte und Status alle 30 Minuten an ThingSpeak.com"
 when
       Time cron "0 0/30 * * * ?"  
 then    
 	    var text  =  "&field1=" + String::format("%.2f%%20", (owmTemperatur.state as DecimalType).floatValue()) + "&field2=" + String::format("%.2f%%20", (owmFeuchte.state as DecimalType).floatValue()) 
 	    var status = "&status=Temperatur%20" + String::format("%.2f", (owmTemperatur.state as DecimalType).floatValue()) + "%20Grad%20C%20Feuchte%20" +String::format("%.2f%%20", (owmFeuchte.state as DecimalType).floatValue()) + "%20Prozent"
 	    var sende = THINGSPEAK_WETTER_URL + text + status
 	    logInfo("System", sende)
    	sendHttpGetRequest(sende)
end

//------------------------------------------------------------------------
//    Sendet Hausstatus um 9 Uhr per Pushover
//------------------------------------------------------------------------

rule "Sende Hausstatus per Pushover um 9 Uhr"
 when
     Time cron "0 0 9 * * ?" 
 then    
  	     var text = "Arbeitszimmer: " + azHeizung.state + " ºC Wohnzimmer: " + wzHeizungWand.state + " ºC " + wzHeizungWandFeuchte.state + " %"
  	     
    	 pushover(text)    
end
	
